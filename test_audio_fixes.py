#!/usr/bin/env python3
"""
test_audio_fixes.py - –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ç–µ—Å—Ç –∞—É–¥–∏–æ –ø—Ä–æ–±–ª–µ–º
"""

import sys
from pathlib import Path
import tempfile
import os

def main():
    print(f"üîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –∞—É–¥–∏–æ VideoCreator Pro")
    print("=" * 60)

    print("üéµ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –≤–∏–¥–µ–æ —Å –∞—É–¥–∏–æ...")

    try:
        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –ø–∞–ø–∫—É –≤ –ø—É—Ç—å
        current_dir = Path(__file__).parent.resolve()
        if str(current_dir) not in sys.path:
            sys.path.append(str(current_dir))
        
        from text_effects_engine import create_enhanced_video
        print("‚úÖ –ú–æ–¥—É–ª–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤
        test_audio_files = []
        audio_folder = Path("output")
        if audio_folder.exists():
            for audio_file in audio_folder.glob("*.mp3"):
                test_audio_files.append(str(audio_file))
                print(f"üéß –ù–∞–π–¥–µ–Ω –∞—É–¥–∏–æ—Ñ–∞–π–ª: {audio_file.name}")
                break  # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–π –Ω–∞–π–¥–µ–Ω–Ω—ã–π
        
        if not test_audio_files:
            print("‚ö†Ô∏è –ê—É–¥–∏–æ—Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –ø–∞–ø–∫–µ output/")
            print("üí° –°–æ–∑–¥–∞–π—Ç–µ –∞—É–¥–∏–æ—Ñ–∞–π–ª—ã —Å –ø–æ–º–æ—â—å—é script.py –∏–ª–∏ –¥–æ–±–∞–≤—å—Ç–µ –ª—é–±–æ–π .mp3 —Ñ–∞–π–ª –≤ –ø–∞–ø–∫—É output/")
            
            # –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –ª—é–±–æ–π –∞—É–¥–∏–æ—Ñ–∞–π–ª –≤ —Å–∏—Å—Ç–µ–º–µ
            downloads_folder = Path.home() / "Downloads"
            for audio_ext in ["*.mp3", "*.wav", "*.m4a"]:
                for audio_file in downloads_folder.glob(audio_ext):
                    test_audio_files = [str(audio_file)]
                    print(f"üéß –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∞—É–¥–∏–æ—Ñ–∞–π–ª: {audio_file.name}")
                    break
                if test_audio_files:
                    break
        
        if not test_audio_files:
            print("‚ùå –ê—É–¥–∏–æ—Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ:")
            print("   1. –ó–∞–ø—É—Å—Ç–∏—Ç—å script.py –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∞—É–¥–∏–æ—Ñ–∞–π–ª–æ–≤")
            print("   2. –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –ª—é–±–æ–π .mp3 —Ñ–∞–π–ª –≤ –ø–∞–ø–∫—É output/")
            print("   3. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: python3 videocreator_main.py")
            return
        
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–µ —Ç–µ—Å—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        test_image_path = None
        downloads_folder = Path.home() / "Downloads"
        for img_ext in ["*.png", "*.jpg", "*.jpeg"]:
            for img_file in downloads_folder.glob(img_ext):
                test_image_path = str(img_file)
                print(f"üñºÔ∏è –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: {img_file.name}")
                break
            if test_image_path:
                break
        
        if not test_image_path:
            print("‚ö†Ô∏è –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ Downloads/")
            print("üí° –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π —Ñ–æ–Ω...")
            try:
                from PIL import Image
                with tempfile.NamedTemporaryFile(suffix=".png", delete=False) as temp_img:
                    img = Image.new('RGB', (1920, 1080), color='blue')
                    img.save(temp_img.name)
                    test_image_path = temp_img.name
                    print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ —Ç–µ—Å—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: {temp_img.name}")
            except ImportError:
                print("‚ùå PIL –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è")
                print("üí° –î–æ–±–∞–≤—å—Ç–µ –ª—é–±–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ Downloads/ –∏–ª–∏ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –æ—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ")
                return
        
        # –ü–æ–ª—É—á–∞–µ–º –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∞—É–¥–∏–æ
        try:
            from moviepy import AudioFileClip
            with AudioFileClip(test_audio_files[0]) as audio_clip:
                audio_duration = min(audio_clip.duration, 10)  # –ú–∞–∫—Å–∏–º—É–º 10 —Å–µ–∫—É–Ω–¥ –¥–ª—è —Ç–µ—Å—Ç–∞
            print(f"üéµ –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∞—É–¥–∏–æ: {audio_duration:.2f} —Å–µ–∫—É–Ω–¥")
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∞—É–¥–∏–æ: {e}")
            audio_duration = 5  # Fallback –∑–Ω–∞—á–µ–Ω–∏–µ
        
        # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –≤–∏–¥–µ–æ
        test_params = {
            'image_paths': [test_image_path],
            'audio_tracks_info': [
                {
                    'path': test_audio_files[0],
                    'start_time': 0.0,
                    'duration': audio_duration
                }
            ],
            'output_path': 'test_video_with_audio.mp4',
            'resolution': (1920, 1080),
            'duration': int(audio_duration),
            'title_text': '–¢–µ—Å—Ç',
            'subtitle_text': '–ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—É–¥–∏–æ',
            'text_color': '#ffffff',
            'stroke_color': '#000000',
            'stroke_width': 2,
            'title_size': 40,
            'subtitle_size': 24,
            'effects': {'typewriter': False, 'fade': False},
            'font_path': None,
            'fps': 30,
            'video_quality': 'medium',
            'codec_name': 'libx264'
        }
        
        print("\nüöÄ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –≤–∏–¥–µ–æ —Å –∞—É–¥–∏–æ...")
        print(f"   üìÅ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: {Path(test_image_path).name}")
        print(f"   üéµ –ê—É–¥–∏–æ: {Path(test_audio_files[0]).name}")
        print(f"   üì∫ –í—ã—Ö–æ–¥–Ω–æ–π —Ñ–∞–π–ª: {test_params['output_path']}")
        print(f"   ‚è±Ô∏è –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {test_params['duration']} —Å–µ–∫")
        
        # –°–æ–∑–¥–∞–µ–º –≤–∏–¥–µ–æ
        result_path = create_enhanced_video(**test_params)
        
        if Path(result_path).exists():
            file_size = Path(result_path).stat().st_size
            print(f"\n‚úÖ –£–°–ü–ï–•! –í–∏–¥–µ–æ —Å–æ–∑–¥–∞–Ω–æ: {result_path}")
            print(f"   üìä –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {file_size / 1024 / 1024:.2f} –ú–ë")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤–∏–¥–µ–æ —Å–æ–¥–µ—Ä–∂–∏—Ç –∞—É–¥–∏–æ
            try:
                from moviepy import VideoFileClip
                with VideoFileClip(result_path) as test_clip:
                    if test_clip.audio is not None:
                        print(f"   üéµ –ê—É–¥–∏–æ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç: –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å {test_clip.audio.duration:.2f} —Å–µ–∫")
                        print(f"   ‚úÖ –ü–†–û–ë–õ–ï–ú–ê –° –ê–£–î–ò–û –ò–°–ü–†–ê–í–õ–ï–ù–ê!")
                    else:
                        print("   ‚ö†Ô∏è –ê—É–¥–∏–æ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ —Ñ–∏–Ω–∞–ª—å–Ω–æ–º –≤–∏–¥–µ–æ")
                    print(f"   üì∫ –í–∏–¥–µ–æ: {test_clip.duration:.2f} —Å–µ–∫, {test_clip.size}")
            except Exception as e:
                print(f"   ‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–∏–¥–µ–æ: {e}")
            
        else:
            print(f"‚ùå –í–∏–¥–µ–æ –Ω–µ —Å–æ–∑–¥–∞–Ω–æ: {result_path}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞: {e}")
        import traceback
        traceback.print_exc()

    print("\n" + "=" * 60)
    print("üèÅ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω")
    print("\nüí° –ï—Å–ª–∏ –≤–∏–¥–µ–æ —Å–æ–∑–¥–∞–ª–æ—Å—å —Å –∞—É–¥–∏–æ - –æ—Å–Ω–æ–≤–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞!")
    print("   –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å: python3 videocreator_main.py")

if __name__ == "__main__":
    main()